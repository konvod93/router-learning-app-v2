import React, { useState, useEffect } from 'react';
import { useRouter } from './hooks/useRouter'

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç —Å—Å—ã–ª–∫–∏
const Link = ({ to, children, className = '', activeClassName = '' }) => {
  const { currentPath, navigate } = useRouter();
  const isActive = currentPath === to;
  
  const handleClick = (e) => {
    e.preventDefault();
    navigate(to);
  };

  return (
    <a 
      href={to} 
      onClick={handleClick}
      className={`${className} ${isActive ? activeClassName : ''}`}
    >
      {children}
    </a>
  );
};

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
const Home = () => {
  return (
    <div className="bg-blue-50 p-6 rounded-lg">
      <h2 className="text-2xl font-bold text-blue-800 mb-4">üè† –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞</h2>
      <p className="text-gray-700 mb-4">
        –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –¥–µ–º–æ –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏–∏! –≠—Ç–æ –≥–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–∞—à–µ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.
      </p>
      <div className="space-y-2">
        <p>‚ú® –û—Å–Ω–æ–≤–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏:</p>
        <ul className="list-disc ml-6 space-y-1">
          <li>–ü–µ—Ä–µ—Ö–æ–¥—ã –º–µ–∂–¥—É —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º–∏</li>
          <li>–î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–µ –º–∞—Ä—à—Ä—É—Ç—ã</li>
          <li>–ü—Ä–æ–≥—Ä–∞–º–º–Ω–∞—è –Ω–∞–≤–∏–≥–∞—Ü–∏—è</li>
          <li>–ò—Å—Ç–æ—Ä–∏—è –±—Ä–∞—É–∑–µ—Ä–∞</li>
        </ul>
      </div>
    </div>
  );
};

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—ã "–û –Ω–∞—Å"
const About = () => {
  return (
    <div className="bg-green-50 p-6 rounded-lg">
      <h2 className="text-2xl font-bold text-green-800 mb-4">‚ÑπÔ∏è –û –Ω–∞—Å</h2>
      <p className="text-gray-700 mb-4">
        –≠—Ç–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç –±–∞–∑–æ–≤—É—é –Ω–∞–≤–∏–≥–∞—Ü–∏—é –±–µ–∑ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è react-router-dom.
      </p>
      <div className="bg-white p-4 rounded border-l-4 border-green-400">
        <h3 className="font-semibold text-green-700">–ß—Ç–æ —Ç–∞–∫–æ–µ –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏—è?</h3>
        <p className="text-sm text-gray-600 mt-2">
          –ú–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏—è –ø–æ–∑–≤–æ–ª—è–µ—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å Single Page Applications (SPA) —Å –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–º–∏ 
          "—Å—Ç—Ä–∞–Ω–∏—Ü–∞–º–∏" –±–µ–∑ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏ –±—Ä–∞—É–∑–µ—Ä–∞, –∏—Å–ø–æ–ª—å–∑—É—è History API.
        </p>
      </div>
    </div>
  );
};

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
const Users = () => {
  const { navigate } = useRouter();
  
  const users = [
    { id: 1, name: '–ê–ª–µ–∫—Å–µ–π –ü–µ—Ç—Ä–æ–≤', role: 'Frontend Developer' },
    { id: 2, name: '–ú–∞—Ä–∏—è –ò–≤–∞–Ω–æ–≤–∞', role: 'UI/UX Designer' },
    { id: 3, name: '–î–º–∏—Ç—Ä–∏–π –°–∏–¥–æ—Ä–æ–≤', role: 'Backend Developer' }
  ];

  const handleUserClick = (userId) => {
    navigate(`/users/${userId}`);
  };

  return (
    <div className="bg-purple-50 p-6 rounded-lg">
      <h2 className="text-2xl font-bold text-purple-800 mb-4">üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏</h2>
      <p className="text-gray-700 mb-4">
        –°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–º–∏ —Å—Å—ã–ª–∫–∞–º–∏. –ö–ª–∏–∫–Ω–∏—Ç–µ –Ω–∞ –ª—é–±–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥–µ—Ç–∞–ª–µ–π.
      </p>
      <div className="grid gap-3">
        {users.map(user => (
          <div
            key={user.id}
            onClick={() => handleUserClick(user.id)}
            className="bg-white p-4 rounded-lg shadow hover:shadow-md transition-shadow border-l-4 border-purple-400 cursor-pointer"
          >
            <div className="flex justify-between items-center">
              <div>
                <h3 className="font-semibold text-gray-800">{user.name}</h3>
                <p className="text-sm text-gray-600">{user.role}</p>
              </div>
              <span className="text-purple-600">‚Üí</span>
            </div>
          </div>
        ))}
      </div>
    </div>
  );
};

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–µ—Ç–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
const UserDetail = () => {
  const { params, navigate, goBack } = useRouter();
  const userId = params.id;
  
  const users = {
    '1': { name: '–ê–ª–µ–∫—Å–µ–π –ü–µ—Ç—Ä–æ–≤', role: 'Frontend Developer', email: 'alexey@example.com', projects: 15 },
    '2': { name: '–ú–∞—Ä–∏—è –ò–≤–∞–Ω–æ–≤–∞', role: 'UI/UX Designer', email: 'maria@example.com', projects: 8 },
    '3': { name: '–î–º–∏—Ç—Ä–∏–π –°–∏–¥–æ—Ä–æ–≤', role: 'Backend Developer', email: 'dmitry@example.com', projects: 12 }
  };

  const user = users[userId];

  if (!user) {
    return (
      <div className="bg-red-50 p-6 rounded-lg">
        <h2 className="text-2xl font-bold text-red-800 mb-4">‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω</h2>
        <p className="text-gray-700 mb-4">
          –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID {userId} –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.
        </p>
        <button
          onClick={() => navigate('/users')}
          className="bg-red-600 text-white px-4 py-2 rounded hover:bg-red-700 transition-colors"
        >
          ‚Üê –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ —Å–ø–∏—Å–∫—É
        </button>
      </div>
    );
  }

  return (
    <div className="bg-indigo-50 p-6 rounded-lg">
      <h2 className="text-2xl font-bold text-indigo-800 mb-4">üë§ –ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</h2>
      
      <div className="bg-white p-6 rounded-lg shadow">
        <h3 className="text-xl font-semibold text-gray-800 mb-4">{user.name}</h3>
        
        <div className="grid md:grid-cols-2 gap-4 mb-6">
          <div>
            <p className="text-sm text-gray-600">–î–æ–ª–∂–Ω–æ—Å—Ç—å:</p>
            <p className="font-medium">{user.role}</p>
          </div>
          <div>
            <p className="text-sm text-gray-600">Email:</p>
            <p className="font-medium">{user.email}</p>
          </div>
          <div>
            <p className="text-sm text-gray-600">ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:</p>
            <p className="font-medium">#{userId}</p>
          </div>
          <div>
            <p className="text-sm text-gray-600">–ü—Ä–æ–µ–∫—Ç–æ–≤:</p>
            <p className="font-medium">{user.projects}</p>
          </div>
        </div>

        <div className="flex gap-3">
          <button
            onClick={() => navigate('/users')}
            className="bg-indigo-600 text-white px-4 py-2 rounded hover:bg-indigo-700 transition-colors"
          >
            ‚Üê –ù–∞–∑–∞–¥ –∫ —Å–ø–∏—Å–∫—É
          </button>
          <button
            onClick={goBack}
            className="bg-gray-600 text-white px-4 py-2 rounded hover:bg-gray-700 transition-colors"
          >
            ‚¨Ö –ò—Å—Ç–æ—Ä–∏—è –Ω–∞–∑–∞–¥
          </button>
          <button
            onClick={() => navigate('/')}
            className="bg-green-600 text-white px-4 py-2 rounded hover:bg-green-700 transition-colors"
          >
            üè† –ù–∞ –≥–ª–∞–≤–Ω—É—é
          </button>
        </div>
      </div>
    </div>
  );
};

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ —Å –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ–π –Ω–∞–≤–∏–≥–∞—Ü–∏–µ–π
const Contact = () => {
  const { navigate, currentPath } = useRouter();
  const [formData, setFormData] = useState({ name: '', message: '' });

  const handleSubmit = (e) => {
    e.preventDefault();
    if (formData.name && formData.message) {
      alert('–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ! –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –≥–ª–∞–≤–Ω—É—é...');
      navigate('/');
    }
  };

  const handleInputChange = (e) => {
    setFormData({
      ...formData,
      [e.target.name]: e.target.value
    });
  };

  return (
    <div className="bg-orange-50 p-6 rounded-lg">
      <h2 className="text-2xl font-bold text-orange-800 mb-4">üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã</h2>
      
      <div className="bg-white p-6 rounded-lg shadow mb-4">
        <div className="space-y-4">
          <div>
            <label className="block text-sm font-medium text-gray-700 mb-2">
              –í–∞—à–µ –∏–º—è:
            </label>
            <input
              type="text"
              name="name"
              value={formData.name}
              onChange={handleInputChange}
              className="w-full p-3 border rounded-lg focus:ring-2 focus:ring-orange-500 focus:border-orange-500"
              placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è"
            />
          </div>
          
          <div>
            <label className="block text-sm font-medium text-gray-700 mb-2">
              –°–æ–æ–±—â–µ–Ω–∏–µ:
            </label>
            <textarea
              name="message"
              value={formData.message}
              onChange={handleInputChange}
              rows="4"
              className="w-full p-3 border rounded-lg focus:ring-2 focus:ring-orange-500 focus:border-orange-500"
              placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ"
            />
          </div>
          
          <button
            onClick={handleSubmit}
            disabled={!formData.name || !formData.message}
            className="bg-orange-600 text-white px-6 py-3 rounded-lg hover:bg-orange-700 transition-colors disabled:bg-gray-400 disabled:cursor-not-allowed"
          >
            –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ
          </button>
        </div>
      </div>

      <div className="bg-blue-100 p-4 rounded-lg">
        <h3 className="font-semibold text-blue-800 mb-2">üîß –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –º–∞—Ä—à—Ä—É—Ç–µ:</h3>
        <p className="text-sm text-blue-700">
          <strong>–¢–µ–∫—É—â–∏–π –ø—É—Ç—å:</strong> {currentPath}
        </p>
        <p className="text-sm text-blue-700">
          <strong>Search –ø–∞—Ä–∞–º–µ—Ç—Ä—ã:</strong> {window.location.search || '–æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç'}
        </p>
      </div>
    </div>
  );
};

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—ã 404
const NotFound = () => {
  const { navigate, goBack, currentPath } = useRouter();
  
  return (
    <div className="bg-red-50 p-6 rounded-lg text-center">
      <h2 className="text-6xl font-bold text-red-600 mb-4">404</h2>
      <h3 className="text-2xl font-bold text-red-800 mb-4">–°—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞</h3>
      <p className="text-gray-700 mb-2">
        –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —Å—Ç—Ä–∞–Ω–∏—Ü–∞ <code className="bg-gray-200 px-2 py-1 rounded">{currentPath}</code> –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.
      </p>
      <p className="text-gray-600 mb-6 text-sm">
        –í–æ–∑–º–æ–∂–Ω–æ, –≤—ã –ø–µ—Ä–µ—à–ª–∏ –ø–æ –Ω–µ–≤–µ—Ä–Ω–æ–π —Å—Å—ã–ª–∫–µ –∏–ª–∏ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –±—ã–ª–∞ –ø–µ—Ä–µ–º–µ—â–µ–Ω–∞.
      </p>
      <div className="space-x-4">
        <button
          onClick={() => navigate('/')}
          className="bg-red-600 text-white px-6 py-3 rounded-lg hover:bg-red-700 transition-colors"
        >
          üè† –ù–∞ –≥–ª–∞–≤–Ω—É—é
        </button>
        <button
          onClick={goBack}
          className="bg-gray-600 text-white px-6 py-3 rounded-lg hover:bg-gray-700 transition-colors"
        >
          ‚Üê –ù–∞–∑–∞–¥
        </button>
      </div>
    </div>
  );
};

// –ì–ª–∞–≤–Ω—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
const Navigation = () => {
  const { currentPath } = useRouter();
  
  const isActive = (path) => {
    if (path === '/' && currentPath === '/') return true;
    if (path !== '/' && currentPath.startsWith(path)) return true;
    return false;
  };

  const navItems = [
    { path: '/', label: '–ì–ª–∞–≤–Ω–∞—è', icon: 'üè†' },
    { path: '/about', label: '–û –Ω–∞—Å', icon: '‚ÑπÔ∏è' },
    { path: '/users', label: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏', icon: 'üë•' },
    { path: '/contact', label: '–ö–æ–Ω—Ç–∞–∫—Ç—ã', icon: 'üìû' }
  ];

  return (
    <nav className="bg-white shadow-lg mb-8">
      <div className="max-w-6xl mx-auto px-4">
        <div className="flex justify-between items-center py-4">
          <div 
            onClick={() => window.location.href = '/'}
            className="text-xl font-bold text-blue-800 cursor-pointer"
          >
            üöÄ Router Demo (Custom)
          </div>
          
          <div className="flex space-x-1">
            {navItems.map(item => (
              <Link
                key={item.path}
                to={item.path}
                className="px-4 py-2 rounded-lg transition-colors text-blue-600 hover:bg-blue-50"
                activeClassName="bg-blue-600 text-white hover:bg-blue-700"
              >
                <span className="mr-1">{item.icon}</span>
                {item.label}
              </Link>
            ))}
          </div>
        </div>
      </div>
    </nav>
  );
};

// –û—Å–Ω–æ–≤–Ω–æ–π —Ä–æ—É—Ç–µ—Ä –∫–æ–º–ø–æ–Ω–µ–Ω—Ç
const Router = () => {
  const { currentPath } = useRouter();

  const renderPage = () => {
    if (currentPath === '/') return <Home />;
    if (currentPath === '/about') return <About />;
    if (currentPath === '/users') return <Users />;
    if (currentPath.startsWith('/users/')) return <UserDetail />;
    if (currentPath === '/contact') return <Contact />;
    return <NotFound />;
  };

  return (
    <div className="min-h-screen bg-gray-100">
      <Navigation />
      
      <div className="max-w-6xl mx-auto px-4 pb-8">
        {renderPage()}
      </div>

      {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–∞—è –ø–∞–Ω–µ–ª—å */}
      <div className="bg-gray-800 text-white p-6">
        <div className="max-w-6xl mx-auto">
          <h3 className="text-lg font-semibold mb-3">üìö –ß—Ç–æ –º—ã –∏–∑—É—á–∏–ª–∏:</h3>
          <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-4 text-sm">
            <div>
              <h4 className="font-medium text-blue-300">–û—Å–Ω–æ–≤—ã –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏–∏:</h4>
              <ul className="mt-1 space-y-1 text-gray-300">
                <li>‚Ä¢ History API</li>
                <li>‚Ä¢ –ü—Ä–æ–≥—Ä–∞–º–º–Ω–∞—è –Ω–∞–≤–∏–≥–∞—Ü–∏—è</li>
                <li>‚Ä¢ –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–±—ã—Ç–∏–π</li>
              </ul>
            </div>
            <div>
              <h4 className="font-medium text-green-300">–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:</h4>
              <ul className="mt-1 space-y-1 text-gray-300">
                <li>‚Ä¢ –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã</li>
                <li>‚Ä¢ –°–æ—Å—Ç–æ—è–Ω–∏–µ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏</li>
                <li>‚Ä¢ –û–±—Ä–∞–±–æ—Ç–∫–∞ 404</li>
              </ul>
            </div>
            <div>
              <h4 className="font-medium text-purple-300">Custom —Ö—É–∫–∏:</h4>
              <ul className="mt-1 space-y-1 text-gray-300">
                <li>‚Ä¢ useRouter</li>
                <li>‚Ä¢ –ü–∞—Ä—Å–∏–Ω–≥ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤</li>
                <li>‚Ä¢ –ò—Å—Ç–æ—Ä–∏—è –±—Ä–∞—É–∑–µ—Ä–∞</li>
              </ul>
            </div>
          </div>
          
          <div className="mt-4 p-4 bg-gray-700 rounded-lg">
            <p className="text-sm text-yellow-300">
              üí° <strong>–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ:</strong> –≠—Ç–æ —É–ø—Ä–æ—â–µ–Ω–Ω–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏–∏ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –ø—Ä–∏–Ω—Ü–∏–ø–æ–≤. 
              –í —Ä–µ–∞–ª—å–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–∞—Ö —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å React Router –¥–ª—è –ø–æ–ª–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏.
            </p>
          </div>
        </div>
      </div>
    </div>
  );
};

// –ì–ª–∞–≤–Ω—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
const App = () => {
  return <Router />;
};

export default App;